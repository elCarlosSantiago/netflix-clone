{"version":3,"sources":["components/Nav.js","axios.js","Requests.js","components/Banner.js","components/Row.js","components/HomeScreen.js","features/userSlice.js","firebase.js","components/PlansScreen.js","components/ProfileScreen.js","components/SignUpScreen.js","components/LoginScreen.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["Nav","useState","show","setShow","history","useHistory","transitionNavBar","window","scrollY","useEffect","addEventListener","removeEventListener","className","onClick","push","src","alt","instance","axios","create","baseURL","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","nChars","movie","setMovie","a","get","request","data","results","Math","floor","random","length","fetchData","style","backgroundImage","backdrop_path","backgroundSize","backgroundPosition","title","name","original_name","overview","substr","Row","fetchUrl","isLargeRow","movies","setMovies","then","res","catch","err","console","error","map","poster_path","id","HomeScreen","userSlice","createSlice","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","PlansScreen","products","setProducts","useSelector","subscription","setSubscription","collection","doc","uid","querySnapshot","forEach","role","current_period_end","seconds","current_period_start","log","where","productDoc","ref","docs","price","prices","priceId","priceData","loadCheckout","add","success_url","location","origin","cancel_url","onSnapshot","snap","sessionId","alert","message","loadStripe","redirectToCheckout","Date","toLocaleDateString","Object","entries","productId","productData","isCurrentPackage","toLowerCase","includes","description","ProfileScreen","email","signOut","SignInScreen","emailRef","useRef","passwordRef","placeholder","type","e","preventDefault","signInWithEmailAndPassword","current","value","authUser","createUserWithEmailAndPassword","LoginScreen","signIn","setSignIn","handleClick","App","dispatch","useDispatch","onAuthStateChanged","userAuth","path","exact","configureStore","reducer","userReducer","Boolean","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4e2afd40.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport './../styles/Nav.css';\n\nfunction Nav() {\n  const [show, setShow] = useState(false);\n  const history = useHistory();\n\n  const transitionNavBar = () => {\n    if (window.scrollY > 100) {\n      setShow(true);\n    } else {\n      setShow(false);\n    }\n  };\n\n  const handleClickProfile = () => {\n    history.push('/profile');\n  };\n\n  const handleClickHome = () => {\n    history.push('/');\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', transitionNavBar);\n    return () => window.removeEventListener('scroll', transitionNavBar);\n  }, []);\n\n  return (\n    <div className={`nav ${show && 'nav-dark'}`}>\n      <div className=\"nav-contents\">\n        <img\n          onClick={handleClickHome}\n          className=\"nav-logo\"\n          src=\"https://plasticoceans.org/wp-content/uploads/2018/09/netflix-logo-1.png\"\n          alt=\"Netlfix Logo\"\n        />\n        <img\n          onClick={handleClickProfile}\n          className=\"nav-avatar\"\n          src=\"https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\"\n          alt=\"avatar\"\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Nav;\n","import axios from 'axios'\n\nconst instance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3'\n})\n\nexport default instance;\n","const API_KEY = 'a15d43a58d17222da604a807a9f9f909'\n\n//Not storing in {process.env.API_KEY} for demo reasons\n\nconst requests = {\n    fetchTrending:`/trending/all/week?api_key=${API_KEY}&language=en-US`,\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n}\n\nexport default requests","import React, { useState, useEffect } from 'react';\nimport '../styles/Banner.css';\nimport axios from './../axios';\nimport requests from './../Requests';\n\nfunction Banner() {\n  const [movie, setMovie] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(requests.fetchNetflixOriginals);\n      setMovie(\n        request.data.results[\n          Math.floor(Math.random() * request.data.results.length - 1)\n        ]\n      );\n      return request;\n    }\n    fetchData();\n  }, []);\n\n\n  const truncate = (str, nChars) => {\n    return str?.length > nChars ? str.substr(0, nChars - 1) + '...' : str;\n  };\n\n  return (\n    <header\n      className=\"banner\"\n      style={{\n        backgroundImage: `url('https://image.tmdb.org/t/p/original/${movie?.backdrop_path}')`,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center center',\n      }}>\n      <div className=\"banner-contents\">\n        <h1 className=\"banner-title\">{movie?.title || movie?.name || movie?.original_name}</h1>\n        <div className=\"banner-buttons\">\n          <button className=\"banner-button\">My List</button>\n          <button className=\"banner-button\">Play</button>\n          <h1 className=\"banner-description\">\n            {truncate(movie?.overview, 150)}\n          </h1>\n        </div>\n      </div>\n      <div className=\"banner-fadeBottom\" />\n    </header>\n  );\n}\n\nexport default Banner;\n","import React, { useEffect, useState } from 'react';\nimport './../styles/Row.css';\nimport axios from './../axios';\nimport requests from '../Requests';\n\nconst Row = ({ title, fetchUrl, isLargeRow = false }) => {\n  const [movies, setMovies] = useState([]);\n\n  const base_url = 'https://image.tmdb.org/t/p/original/';\n\n  useEffect(() => {\n    // async function fetchData() {\n    //   const request = await axios.get(fetchUrl);\n    //   setMovies(request.data.results);\n    //   return request;\n    // }\n    const fetchData = () => {\n      axios\n      .get(fetchUrl)\n      .then(res => {\n        setMovies(res.data.results)\n      })\n      .catch(err => {\n        console.error(err)\n      })\n    }\n\n    fetchData();\n  }, [fetchUrl]);\n\n  return (\n    <div className=\"row\">\n      <h2>{title}</h2>\n      <div className=\"row-posters\">\n        {movies.map(\n          (movie) =>\n            ((isLargeRow && movie.poster_path) ||\n            (!isLargeRow && movie.backdrop_path)) && (\n              <img\n                className={`row-poster ${isLargeRow && 'row-posterLarge'}`}\n                src={`${base_url}${\n                  isLargeRow ? movie.poster_path : movie.backdrop_path\n                }`}\n                alt={movie.name}\n                key={movie.id}\n              />\n            )\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Row;\n","import React from 'react';\nimport '../styles/HomeScreen.css';\nimport Nav from './Nav';\nimport Banner from './Banner';\nimport requests from '../Requests';\nimport Row from './Row'\n\nfunction HomeScreen() {\n  return (\n    <div className=\"homeScreen\">\n      <Nav />\n      <Banner />\n      <Row\n        title=\"Santiago's Netflix\"\n        fetchUrl={requests.fetchNetflixOriginals}\n        isLargeRow\n      />\n      <Row title=\"Trending now\" fetchUrl={requests.fetchTrending} />\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} />\n    </div>\n  );\n}\n\nexport default HomeScreen;\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const userSlice = createSlice({\r\n  name: 'user',\r\n  initialState: {\r\n    user: null,\r\n  },\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.user = action.payload;\r\n    },\r\n    logout: (state) => {\r\n      state.user = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { login, logout } = userSlice.actions;\r\n\r\nexport const selectUser = (state) => state.user.user;\r\n\r\nexport default userSlice.reducer;\r\n","import firebase from 'firebase';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyCK6aXyZz-VQnU0KxqZrs7SFK2DFpTG9jU',\n  authDomain: 'netflix-clone-bfac1.firebaseapp.com',\n  projectId: 'netflix-clone-bfac1',\n  storageBucket: 'netflix-clone-bfac1.appspot.com',\n  messagingSenderId: '127023383819',\n  appId: '1:127023383819:web:0179cffabb0e5206d70e0e',\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\n\nexport { auth };\nexport default db;\n","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport db from '../firebase';\nimport './../styles/PlansScreen.css';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { selectUser } from './../features/userSlice';\n\nfunction PlansScreen() {\n  const [products, setProducts] = useState([]);\n  const user = useSelector(selectUser);\n  const [subscription, setSubscription] = useState(null);\n\n  useEffect(() => {\n    db.collection('customers')\n      .doc(user.uid)\n      .collection('subscriptions')\n      .get()\n      .then((querySnapshot) => {\n        querySnapshot.forEach(async (subscription) => {\n          setSubscription({\n            role: subscription.data().role,\n            current_period_end: subscription.data().current_period_end.seconds,\n            current_period_start: subscription.data().current_period_start\n              .seconds,\n          });\n        });\n      });\n  }, [user.uid]);\n\n  console.log(subscription);\n\n  useEffect(() => {\n    db.collection('products')\n      .where('active', '==', true)\n      .get()\n      .then((querySnapshot) => {\n        const products = {};\n        querySnapshot.forEach(async (productDoc) => {\n          products[productDoc.id] = productDoc.data();\n          const priceSnap = await productDoc.ref.collection('prices').get();\n          priceSnap.docs.forEach((price) => {\n            products[productDoc.id].prices = {\n              priceId: price.id,\n              priceData: price.data(),\n            };\n          });\n        });\n        setProducts(products);\n      });\n  }, []);\n\n  const loadCheckout = async (priceId) => {\n    const docRef = await db\n      .collection('customers')\n      .doc(user.uid)\n      .collection('checkout_sessions')\n      .add({\n        price: priceId,\n        success_url: window.location.origin,\n        cancel_url: window.location.origin,\n      });\n    docRef.onSnapshot(async (snap) => {\n      const { error, sessionId } = snap.data();\n\n      if (error) {\n        // Show an error to your customer and\n        // inspect your Cloud Function logs in the Firebase console.\n        alert(`An error occurred: ${error.message}`);\n      }\n      if (sessionId) {\n        // We have a session, let's redirect to Checkout\n        // Init Stripe\n\n        const stripe = await loadStripe(\n          'pk_test_51INN5wDIjfpbfl8KAzj99w8T6zQpxHj9O2rQu1YM0k1hdw4zCRadSDKHnVWZQ8a2JK08ra3k2xjQiD4B9z9gKFj900BmLcQ8By'\n        );\n        stripe.redirectToCheckout({ sessionId });\n      }\n    });\n  };\n\n  return (\n    <div className=\"plansScreen\">\n      <br />\n      {subscription && (\n        <p>\n          Renewal Date:\n          {new Date(\n            subscription?.current_period_end * 1000\n          ).toLocaleDateString()}\n        </p>\n      )}\n      {Object.entries(products).map(([productId, productData]) => {\n        const isCurrentPackage = productData.name\n          ?.toLowerCase()\n          .includes(subscription?.role);\n\n        return (\n          <div\n            key={productId}\n            className={`${\n              isCurrentPackage && 'plansScreen-plan-disabled'\n            } plansScreen-plan`}>\n            <div className=\"plansScreen-info\">\n              <h5>{productData.name}</h5>\n              <h6>{productData.description}</h6>\n            </div>\n            <button\n              onClick={() =>\n                !isCurrentPackage && loadCheckout(productData.prices.priceId)\n              }>\n              {isCurrentPackage ? 'Current Package' : 'Subscribe'}\n            </button>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default PlansScreen;\n","import React from 'react';\nimport { selectUser } from '../features/userSlice';\nimport './../styles/ProfileScreen.css';\nimport Nav from './Nav';\nimport { useSelector } from 'react-redux';\nimport { auth } from '../firebase';\nimport PlansScreen from './PlansScreen';\n\nfunction ProfileScreen() {\n  const user = useSelector(selectUser);\n\n  const handleClickSignOut = () => {\n    auth.signOut();\n  };\n\n  return (\n    <div className=\"profileScreen\">\n      <Nav />\n      <div className=\"profileScreen-body\">\n        <h1>Edit Profile</h1>\n        <div className=\"profileScreen-info\">\n          <img\n            src=\"https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\"\n            alt=\"avatar\"\n          />\n          <div className=\"profileScreen-details\">\n            <h2>{user.email}</h2>\n            <div className=\"profileScreen-plans\">\n              <h3>Plans</h3>\n              <PlansScreen />\n              <p></p>\n              <button\n                onClick={handleClickSignOut}\n                className=\"profileScreen-signOut\">\n                Sign Out\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ProfileScreen;\n","import React, { useRef } from 'react';\nimport { auth } from '../firebase';\nimport './../styles/SignUpScreen.css';\n\nconst SignInScreen = () => {\n  const emailRef = useRef(null);\n  const passwordRef = useRef(null);\n\n  const register = (e) => {\n    e.preventDefault();\n    auth\n      .createUserWithEmailAndPassword(\n        emailRef.current.value,\n        passwordRef.current.value\n      )\n      .then((authUser) => {\n        console.log(authUser);\n      })\n      .catch((error) => {\n        alert(error.message);\n      });\n  };\n\n  const signIn = (e) => {\n    e.preventDefault();\n    auth\n      .signInWithEmailAndPassword(\n        emailRef.current.value,\n        passwordRef.current.value\n      )\n      .then((authUser) => {\n        console.log(authUser);\n      })\n      .catch((err) => alert(err.message));\n  };\n\n  return (\n    <div className=\"signUpScreen\">\n      <form>\n        <h1>Sign In</h1>\n        <input ref={emailRef} placeholder=\"Email\" type=\"email\" />\n        <input ref={passwordRef} placeholder=\"Password\" type=\"password\" />\n        <button type=\"submit\" onClick={signIn}>\n          Sign In\n        </button>\n\n        <h4>\n          <span className=\"signUpScreen-gray\">New to Netflix? </span>\n          <span className=\"signUpScreen-link\" onClick={register}>\n            Sign Up now.\n          </span>\n        </h4>\n      </form>\n    </div>\n  );\n};\n\nexport default SignInScreen;\n ","import React, { useState } from 'react';\nimport SignUpScreen from './SignUpScreen'\nimport './../styles/LoginScreen.css';\n\nconst LoginScreen = () => {\n  const [signIn, setSignIn] = useState(false);\n\n  const handleClick = () => {\n    setSignIn(true);\n  };\n  return (\n    <div className=\"loginScreen\">\n      <div className=\"loginScreen-background\">\n        <img\n          className=\"loginScreen-logo\"\n          src=\"https://assets.stickpng.com/images/580b57fcd9996e24bc43c529.png\"\n          alt=\"Netflix background\"\n        />\n        <button className=\"loginScreen-button\" onClick={handleClick}>\n          Sign In\n        </button>\n        <div className=\"loginScreen-gradient\"></div>\n      </div>\n      <div className=\"loginScreen-body\">\n        {signIn ? (\n          <SignUpScreen />\n        ) : (\n          <>\n            <h1>Unlimited, movies, TV shows, and more.</h1>\n            <h2>Watch anywhere. Cancel anytime.</h2>\n            <h3>\n              Ready to watch? Enter your email to create or restart your\n              membership.\n            </h3>\n            <div className=\"loginScreen-input\">\n              <form>\n                <input type=\"email\" placeholder=\"Email Address\" />\n                <button\n                  className=\"loginScreen-getStarted\"\n                  onClick={handleClick}>\n                  Get Started! \n                </button>\n              </form>\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default LoginScreen;\n","import React, { useEffect } from 'react';\r\nimport './styles/App.css';\r\nimport HomeScreen from './components/HomeScreen';\r\nimport ProfileScreen from './components/ProfileScreen';\r\n\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport LoginScreen from './components/LoginScreen';\r\nimport { auth } from './firebase';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { login, logout, selectUser } from './features/userSlice';\r\n\r\nfunction App() {\r\n  const user = useSelector(selectUser);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((userAuth) => {\r\n      if (userAuth) {\r\n        dispatch(\r\n          login({\r\n            uid: userAuth.uid,\r\n            email: userAuth.email,\r\n          })\r\n        );\r\n      } else {\r\n        dispatch(logout());\r\n      }\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Router>\r\n        {!user ? (\r\n          <LoginScreen />\r\n        ) : (\r\n          <Switch>\r\n            <Route path=\"/profile\">\r\n              <ProfileScreen />\r\n            </Route>\r\n            <Route exact path=\"/\">\r\n              <HomeScreen />\r\n            </Route>\r\n          </Switch>\r\n        )}\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport userReducer from '../features/userSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    user: userReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}