{"ast":null,"code":"import _regeneratorRuntime from\"/Users/carlossantiagonevett/Documents/selfStudy/netflix-clone/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/carlossantiagonevett/Documents/selfStudy/netflix-clone/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/carlossantiagonevett/Documents/selfStudy/netflix-clone/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import'./../styles/Row.css';import axios from'./../axios';import requests from'../Requests';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Row=function Row(_ref){var title=_ref.title,fetchUrl=_ref.fetchUrl,_ref$isLargeRow=_ref.isLargeRow,isLargeRow=_ref$isLargeRow===void 0?false:_ref$isLargeRow;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),movies=_useState2[0],setMovies=_useState2[1];var base_url='https://image.tmdb.org/t/p/original/';useEffect(function(){function fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var request;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(fetchUrl);case 2:request=_context.sent;setMovies(request.data.results);return _context.abrupt(\"return\",request);case 5:case\"end\":return _context.stop();}}},_callee);}));return _fetchData.apply(this,arguments);}fetchData();},[fetchUrl]);console.log(movies);return/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"h2\",{children:title}),/*#__PURE__*/_jsx(\"div\",{className:\"row-posters\",children:movies.map(function(movie){return(isLargeRow&&movie.poster_path||!isLargeRow&&movie.backdrop_path)&&/*#__PURE__*/_jsx(\"img\",{className:\"row-poster \".concat(isLargeRow&&'row-posterLarge'),src:\"\".concat(base_url).concat(isLargeRow?movie.poster_path:movie.backdrop_path),alt:movie.name},movie.id);})})]});};export default Row;","map":{"version":3,"sources":["/Users/carlossantiagonevett/Documents/selfStudy/netflix-clone/src/components/Row.js"],"names":["React","useEffect","useState","axios","requests","Row","title","fetchUrl","isLargeRow","movies","setMovies","base_url","fetchData","get","request","data","results","console","log","map","movie","poster_path","backdrop_path","name","id"],"mappings":"6aAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAO,qBAAP,CACA,MAAOC,CAAAA,KAAP,KAAkB,YAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,aAArB,C,wFAEA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,MAA6C,IAA1CC,CAAAA,KAA0C,MAA1CA,KAA0C,CAAnCC,QAAmC,MAAnCA,QAAmC,sBAAzBC,UAAyB,CAAzBA,UAAyB,0BAAZ,KAAY,+BAC3BN,QAAQ,CAAC,EAAD,CADmB,wCAChDO,MADgD,eACxCC,SADwC,eAGvD,GAAMC,CAAAA,QAAQ,CAAG,sCAAjB,CAEAV,SAAS,CAAC,UAAM,SACCW,CAAAA,SADD,qIACd,qKACwBT,CAAAA,KAAK,CAACU,GAAN,CAAUN,QAAV,CADxB,QACQO,OADR,eAEEJ,SAAS,CAACI,OAAO,CAACC,IAAR,CAAaC,OAAd,CAAT,CAFF,gCAGSF,OAHT,wDADc,4CAMdF,SAAS,GACV,CAPQ,CAON,CAACL,QAAD,CAPM,CAAT,CASAU,OAAO,CAACC,GAAR,CAAYT,MAAZ,EACA,mBACE,aAAK,SAAS,CAAC,KAAf,wBACE,oBAAKH,KAAL,EADF,cAEE,YAAK,SAAS,CAAC,aAAf,UACGG,MAAM,CAACU,GAAP,CACC,SAACC,KAAD,QACE,CAAEZ,UAAU,EAAIY,KAAK,CAACC,WAArB,EACA,CAACb,UAAD,EAAeY,KAAK,CAACE,aADtB,gBAEE,YACE,SAAS,sBAAgBd,UAAU,EAAI,iBAA9B,CADX,CAEE,GAAG,WAAKG,QAAL,SACDH,UAAU,CAAGY,KAAK,CAACC,WAAT,CAAuBD,KAAK,CAACE,aADtC,CAFL,CAKE,GAAG,CAAEF,KAAK,CAACG,IALb,EAMOH,KAAK,CAACI,EANb,CAHJ,EADD,CADH,EAFF,GADF,CAqBD,CApCD,CAsCA,cAAenB,CAAAA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './../styles/Row.css';\nimport axios from './../axios';\nimport requests from '../Requests';\n\nconst Row = ({ title, fetchUrl, isLargeRow = false }) => {\n  const [movies, setMovies] = useState([]);\n\n  const base_url = 'https://image.tmdb.org/t/p/original/';\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n    fetchData();\n  }, [fetchUrl]);\n\n  console.log(movies);\n  return (\n    <div className=\"row\">\n      <h2>{title}</h2>\n      <div className=\"row-posters\">\n        {movies.map(\n          (movie) =>\n            ((isLargeRow && movie.poster_path) ||\n            (!isLargeRow && movie.backdrop_path)) && (\n              <img\n                className={`row-poster ${isLargeRow && 'row-posterLarge'}`}\n                src={`${base_url}${\n                  isLargeRow ? movie.poster_path : movie.backdrop_path\n                }`}\n                alt={movie.name}\n                key={movie.id}\n              />\n            )\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Row;\n"]},"metadata":{},"sourceType":"module"}