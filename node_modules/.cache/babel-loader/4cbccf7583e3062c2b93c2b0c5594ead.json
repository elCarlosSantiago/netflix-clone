{"ast":null,"code":"var _jsxFileName = \"/Users/carlossantiagonevett/Documents/selfStudy/netflix-clone/src/components/Row.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './../styles/Row.css';\nimport axios from './../axios';\nimport requests from '../Requests';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Row = ({\n  title,\n  fetchUrl,\n  isLargeRow = false\n}) => {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const base_url = 'https://image.tmdb.org/t/p/original/';\n  useEffect(() => {\n    // async function fetchData() {\n    //   const request = await axios.get(fetchUrl);\n    //   setMovies(request.data.results);\n    //   return request;\n    // }\n    const fetchData = () => {\n      axios.get(fetchUrl).then(res => {\n        setMovies(res.data.results);\n      }).catch(err => {\n        console.err(err);\n      });\n    };\n\n    fetchData();\n  }, [fetchUrl]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row-posters\",\n      children: movies.map(movie => (isLargeRow && movie.poster_path || !isLargeRow && movie.backdrop_path) && /*#__PURE__*/_jsxDEV(\"img\", {\n        className: `row-poster ${isLargeRow && 'row-posterLarge'}`,\n        src: `${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n        alt: movie.name\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Row, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n\n_c = Row;\nexport default Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"sources":["/Users/carlossantiagonevett/Documents/selfStudy/netflix-clone/src/components/Row.js"],"names":["React","useEffect","useState","axios","requests","Row","title","fetchUrl","isLargeRow","movies","setMovies","base_url","fetchData","get","then","res","data","results","catch","err","console","map","movie","poster_path","backdrop_path","name","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,qBAAP;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,QAAP,MAAqB,aAArB;;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA,UAAU,GAAG;AAAhC,CAAD,KAA6C;AAAA;;AACvD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAMS,QAAQ,GAAG,sCAAjB;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACd;AACA;AACA;AACA;AACA;AACA,UAAMW,SAAS,GAAG,MAAM;AACtBT,MAAAA,KAAK,CACJU,GADD,CACKN,QADL,EAECO,IAFD,CAEMC,GAAG,IAAI;AACXL,QAAAA,SAAS,CAACK,GAAG,CAACC,IAAJ,CAASC,OAAV,CAAT;AACD,OAJD,EAKCC,KALD,CAKOC,GAAG,IAAI;AACZC,QAAAA,OAAO,CAACD,GAAR,CAAYA,GAAZ;AACD,OAPD;AAQD,KATD;;AAWAP,IAAAA,SAAS;AACV,GAlBQ,EAkBN,CAACL,QAAD,CAlBM,CAAT;AAoBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA,gBAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,gBACGG,MAAM,CAACY,GAAP,CACEC,KAAD,IACE,CAAEd,UAAU,IAAIc,KAAK,CAACC,WAArB,IACA,CAACf,UAAD,IAAec,KAAK,CAACE,aADtB,kBAEE;AACE,QAAA,SAAS,EAAG,cAAahB,UAAU,IAAI,iBAAkB,EAD3D;AAEE,QAAA,GAAG,EAAG,GAAEG,QAAS,GACfH,UAAU,GAAGc,KAAK,CAACC,WAAT,GAAuBD,KAAK,CAACE,aACxC,EAJH;AAKE,QAAA,GAAG,EAAEF,KAAK,CAACG;AALb,SAMOH,KAAK,CAACI,EANb;AAAA;AAAA;AAAA;AAAA,cAJL;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA9CD;;GAAMrB,G;;KAAAA,G;AAgDN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './../styles/Row.css';\nimport axios from './../axios';\nimport requests from '../Requests';\n\nconst Row = ({ title, fetchUrl, isLargeRow = false }) => {\n  const [movies, setMovies] = useState([]);\n\n  const base_url = 'https://image.tmdb.org/t/p/original/';\n\n  useEffect(() => {\n    // async function fetchData() {\n    //   const request = await axios.get(fetchUrl);\n    //   setMovies(request.data.results);\n    //   return request;\n    // }\n    const fetchData = () => {\n      axios\n      .get(fetchUrl)\n      .then(res => {\n        setMovies(res.data.results)\n      })\n      .catch(err => {\n        console.err(err)\n      })\n    }\n\n    fetchData();\n  }, [fetchUrl]);\n\n  return (\n    <div className=\"row\">\n      <h2>{title}</h2>\n      <div className=\"row-posters\">\n        {movies.map(\n          (movie) =>\n            ((isLargeRow && movie.poster_path) ||\n            (!isLargeRow && movie.backdrop_path)) && (\n              <img\n                className={`row-poster ${isLargeRow && 'row-posterLarge'}`}\n                src={`${base_url}${\n                  isLargeRow ? movie.poster_path : movie.backdrop_path\n                }`}\n                alt={movie.name}\n                key={movie.id}\n              />\n            )\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Row;\n"]},"metadata":{},"sourceType":"module"}