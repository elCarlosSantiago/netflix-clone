[{"/Users/carlossantiagonevett/Documents/selfStudy/netflix-clone/src/index.js":"1","/Users/carlossantiagonevett/Documents/selfStudy/netflix-clone/src/App.js":"2","/Users/carlossantiagonevett/Documents/selfStudy/netflix-clone/src/serviceWorker.js":"3","/Users/carlossantiagonevett/Documents/selfStudy/netflix-clone/src/app/store.js":"4","/Users/carlossantiagonevett/Documents/selfStudy/netflix-clone/src/components/HomeScreen.js":"5","/Users/carlossantiagonevett/Documents/selfStudy/netflix-clone/src/components/Nav.js":"6","/Users/carlossantiagonevett/Documents/selfStudy/netflix-clone/src/components/Banner.js":"7","/Users/carlossantiagonevett/Documents/selfStudy/netflix-clone/src/Requests.js":"8","/Users/carlossantiagonevett/Documents/selfStudy/netflix-clone/src/axios.js":"9","/Users/carlossantiagonevett/Documents/selfStudy/netflix-clone/src/components/Row.js":"10","/Users/carlossantiagonevett/Documents/selfStudy/netflix-clone/src/components/LoginScreen.js":"11","/Users/carlossantiagonevett/Documents/selfStudy/netflix-clone/src/components/SignUpScreen.js":"12","/Users/carlossantiagonevett/Documents/selfStudy/netflix-clone/src/firebase.js":"13","/Users/carlossantiagonevett/Documents/selfStudy/netflix-clone/src/features/userSlice.js":"14","/Users/carlossantiagonevett/Documents/selfStudy/netflix-clone/src/components/ProfileScreen.js":"15","/Users/carlossantiagonevett/Documents/selfStudy/netflix-clone/src/components/PlansScreen.js":"16"},{"size":651,"mtime":1613861392088,"results":"17","hashOfConfig":"18"},{"size":1331,"mtime":1614296880735,"results":"19","hashOfConfig":"18"},{"size":5141,"mtime":1613770930488,"results":"20","hashOfConfig":"18"},{"size":186,"mtime":1613874568124,"results":"21","hashOfConfig":"18"},{"size":956,"mtime":1613783496930,"results":"22","hashOfConfig":"18"},{"size":1222,"mtime":1613875710366,"results":"23","hashOfConfig":"18"},{"size":1418,"mtime":1613862692435,"results":"24","hashOfConfig":"18"},{"size":704,"mtime":1614289445767,"results":"25","hashOfConfig":"18"},{"size":132,"mtime":1613778551777,"results":"26","hashOfConfig":"18"},{"size":1353,"mtime":1613863517810,"results":"27","hashOfConfig":"18"},{"size":1497,"mtime":1613879485128,"results":"28","hashOfConfig":"18"},{"size":1393,"mtime":1614296238002,"results":"29","hashOfConfig":"18"},{"size":530,"mtime":1614289447968,"results":"30","hashOfConfig":"18"},{"size":571,"mtime":1614296883546,"results":"31","hashOfConfig":"18"},{"size":1219,"mtime":1613937661476,"results":"32","hashOfConfig":"18"},{"size":3696,"mtime":1614295770986,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1kxlhx3",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},"/Users/carlossantiagonevett/Documents/selfStudy/netflix-clone/src/index.js",[],["69","70"],"/Users/carlossantiagonevett/Documents/selfStudy/netflix-clone/src/App.js",[],"/Users/carlossantiagonevett/Documents/selfStudy/netflix-clone/src/serviceWorker.js",[],"/Users/carlossantiagonevett/Documents/selfStudy/netflix-clone/src/app/store.js",[],"/Users/carlossantiagonevett/Documents/selfStudy/netflix-clone/src/components/HomeScreen.js",[],"/Users/carlossantiagonevett/Documents/selfStudy/netflix-clone/src/components/Nav.js",[],"/Users/carlossantiagonevett/Documents/selfStudy/netflix-clone/src/components/Banner.js",[],"/Users/carlossantiagonevett/Documents/selfStudy/netflix-clone/src/Requests.js",[],"/Users/carlossantiagonevett/Documents/selfStudy/netflix-clone/src/axios.js",[],"/Users/carlossantiagonevett/Documents/selfStudy/netflix-clone/src/components/Row.js",["71"],"import React, { useEffect, useState } from 'react';\nimport './../styles/Row.css';\nimport axios from './../axios';\nimport requests from '../Requests';\n\nconst Row = ({ title, fetchUrl, isLargeRow = false }) => {\n  const [movies, setMovies] = useState([]);\n\n  const base_url = 'https://image.tmdb.org/t/p/original/';\n\n  useEffect(() => {\n    // async function fetchData() {\n    //   const request = await axios.get(fetchUrl);\n    //   setMovies(request.data.results);\n    //   return request;\n    // }\n    const fetchData = () => {\n      axios\n      .get(fetchUrl)\n      .then(res => {\n        setMovies(res.data.results)\n      })\n      .catch(err => {\n        console.error(err)\n      })\n    }\n\n    fetchData();\n  }, [fetchUrl]);\n\n  return (\n    <div className=\"row\">\n      <h2>{title}</h2>\n      <div className=\"row-posters\">\n        {movies.map(\n          (movie) =>\n            ((isLargeRow && movie.poster_path) ||\n            (!isLargeRow && movie.backdrop_path)) && (\n              <img\n                className={`row-poster ${isLargeRow && 'row-posterLarge'}`}\n                src={`${base_url}${\n                  isLargeRow ? movie.poster_path : movie.backdrop_path\n                }`}\n                alt={movie.name}\n                key={movie.id}\n              />\n            )\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Row;\n","/Users/carlossantiagonevett/Documents/selfStudy/netflix-clone/src/components/LoginScreen.js",[],"/Users/carlossantiagonevett/Documents/selfStudy/netflix-clone/src/components/SignUpScreen.js",[],"/Users/carlossantiagonevett/Documents/selfStudy/netflix-clone/src/firebase.js",[],"/Users/carlossantiagonevett/Documents/selfStudy/netflix-clone/src/features/userSlice.js",[],"/Users/carlossantiagonevett/Documents/selfStudy/netflix-clone/src/components/ProfileScreen.js",[],"/Users/carlossantiagonevett/Documents/selfStudy/netflix-clone/src/components/PlansScreen.js",["72"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport db from '../firebase';\nimport './../styles/PlansScreen.css';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { selectUser, subscribe } from './../features/userSlice';\n\nfunction PlansScreen() {\n  const [products, setProducts] = useState([]);\n  const user = useSelector(selectUser);\n  const [subscription, setSubscription] = useState(null);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    db.collection('customers')\n      .doc(user.uid)\n      .collection('subscriptions')\n      .get()\n      .then((querySnapshot) => {\n        querySnapshot.forEach(async (subscription) => {\n          setSubscription({\n            role: subscription.data().role,\n            current_period_end: subscription.data().current_period_end.seconds,\n            current_period_start: subscription.data().current_period_start\n              .seconds,\n          });\n          dispatch(subscribe(subscription.data().role));\n        });\n      });\n  }, [user.uid]);\n\n  useEffect(() => {\n    db.collection('products')\n      .where('active', '==', true)\n      .get()\n      .then((querySnapshot) => {\n        const products = {};\n        querySnapshot.forEach(async (productDoc) => {\n          products[productDoc.id] = productDoc.data();\n          const priceSnap = await productDoc.ref.collection('prices').get();\n          priceSnap.docs.forEach((price) => {\n            products[productDoc.id].prices = {\n              priceId: price.id,\n              priceData: price.data(),\n            };\n          });\n        });\n        setProducts(products);\n      });\n  }, []);\n\n  const loadCheckout = async (priceId) => {\n    const docRef = await db\n      .collection('customers')\n      .doc(user.uid)\n      .collection('checkout_sessions')\n      .add({\n        price: priceId,\n        success_url: window.location.origin,\n        cancel_url: window.location.origin,\n      });\n    docRef.onSnapshot(async (snap) => {\n      const { error, sessionId } = snap.data();\n\n      if (error) {\n        // Show an error to your customer and\n        // inspect your Cloud Function logs in the Firebase console.\n        alert(`An error occurred: ${error.message}`);\n      }\n      if (sessionId) {\n        // We have a session, let's redirect to Checkout\n        // Init Stripe\n\n        const stripe = await loadStripe(\n          'pk_test_51INN5wDIjfpbfl8KAzj99w8T6zQpxHj9O2rQu1YM0k1hdw4zCRadSDKHnVWZQ8a2JK08ra3k2xjQiD4B9z9gKFj900BmLcQ8By'\n        );\n        stripe.redirectToCheckout({ sessionId });\n      }\n    });\n  };\n\n  return (\n    <div className=\"plansScreen\">\n      <br />\n      {subscription && (\n        <p>\n          Renewal Date:\n          {new Date(\n            subscription?.current_period_end * 1000\n          ).toLocaleDateString()}\n        </p>\n      )}\n      {Object.entries(products).map(([productId, productData]) => {\n        const isCurrentPackage = productData.name\n          ?.toLowerCase()\n          .includes(subscription?.role);\n\n        return (\n          <div\n            key={productId}\n            className={`${\n              isCurrentPackage && 'plansScreen-plan-disabled'\n            } plansScreen-plan`}>\n            <div className=\"plansScreen-info\">\n              <h5>{productData.name}</h5>\n              <h6>{productData.description}</h6>\n            </div>\n            <button\n              onClick={() =>\n                !isCurrentPackage && loadCheckout(productData.prices.priceId)\n              }>\n              {isCurrentPackage ? 'Current Package' : 'Subscribe'}\n            </button>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default PlansScreen;\n",{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":4,"column":8,"nodeType":"79","messageId":"80","endLine":4,"endColumn":16},{"ruleId":"81","severity":1,"message":"82","line":30,"column":6,"nodeType":"83","endLine":30,"endColumn":16,"suggestions":"84"},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"no-unused-vars","'requests' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["87"],"no-global-assign","no-unsafe-negation",{"desc":"88","fix":"89"},"Update the dependencies array to be: [dispatch, user.uid]",{"range":"90","text":"91"},[1054,1064],"[dispatch, user.uid]"]